#!/data/scripts/nices/perl/bin/perl
use strict;
use warnings;
use File::Spec;

use NS::Util::OptConf;

use YAML::XS;
use NS::Util::Apps;
use Sys::Hostname;

$| ++;


use NS::OpenAPI::Apps;

my $openapi = NS::OpenAPI::Apps->new();

my %addr = map{ $_ => 1 } grep{ $_ ne '127.0.0.1' } `ifconfig` =~ /inet addr:(\d+\.\d+\.\d+\.\d+)/g;
$addr{Sys::Hostname::hostname} = 1;

my $data = $openapi->dump( $ENV{VHOSTNAME} || join ',', keys %addr );
my %o = NS::Util::OptConf->load()->get( qw( apps=s print verbose ) )->dump();

unless( $o{apps} )
{
    print "apps:\n";
    map{ print "  $_\n"; } sort keys %$data;
    exit;
}

my $apps = NS::Util::Apps->new( data => $data, map{ $_ => $o{$_} }qw{ print verbose } );

my ( @ctrl, %macro );
map{ 
    if( $_ =~ /^([^=]+)=(.*)/ )
    {
        $macro{$1} = $2;
    }
    else { push @ctrl, $_; }

}@ARGV;
    
my $t = $o{apps};
$apps->do( 
    macro => \%macro, 
    apps =>  $o{apps} eq '...'
             ?  [ keys %$data ]
             : $t =~ s#^/## &&  $t =~ s#/$##
               ? [ grep{ $_ =~ /$t/ }keys %$data ]
               : [ split ',', $o{apps}],
    ctrl => \@ctrl
);
